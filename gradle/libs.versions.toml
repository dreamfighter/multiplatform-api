[versions]
agp = "8.5.2"
autoService = "1.0-rc7"
kotlin = "2.0.21"
kotlinxCoroutinesAndroid = "1.9.0"
kotlinxCoroutinesCore = "1.9.0"
kotlinxSerializationJson = "1.7.3"
nexus-publish = "2.0.0"
android-minSdk = "24"
android-compileSdk = "34"
androidx-lifecycle = "2.8.3"
startupRuntime = "1.2.0"
systemLambda = "1.2.0"
google-credentials = "1.3.0"
compose-plugin = "1.6.11"
ktor-network = "3.0.0"
slf4j-api = "2.0.16"
ksp = "2.0.21-1.0.26"
kotlinpoet = "1.12.0"

[libraries]
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "startupRuntime" }
auto-service = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesCore" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
nexus-publish = { module = "io.github.gradle-nexus.publish-plugin:io.github.gradle-nexus.publish-plugin.gradle.plugin", version.ref = "nexus-publish" }
system-lambda = { module = "com.github.stefanbirkner:system-lambda", version.ref = "systemLambda" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor-network" }
#ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor-network" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor-network" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-network" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor-network" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-network" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor-network" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-network" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor-network" }
androidx-credentials-play-services-auth = { group = "androidx.credentials", name = "credentials-play-services-auth", version.ref = "google-credentials" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j-api" }
#noinspection CredentialDependency
androidx-credentials = { group = "androidx.credentials", name = "credentials", version.ref = "google-credentials" }
ksp-processor-api = { group = "com.google.devtools.ksp", name = "symbol-processing-api", version.ref = "ksp" }
kotlinpoet = { group = "com.squareup", name = "kotlinpoet-ksp", version.ref = "kotlinpoet"}


[plugins]
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
serializationPlugin = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinNativeCocoaPods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }